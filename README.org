#+AUTHOR: Christopher Reichert
#+TITLE:  Embed Rust in Haskell
#+DATE:   Sat, Dec 13 2014


** Build and Run

  *The Rust and GHC Haskell compiler need to be in PATH*
#+BEGIN_SRC sh
  $ make
  $ make run
#+END_SRC


This writeup is a work-in-progress. I want to provide a more
comprehensive breakdown and outline design plans for a `Foreign.Rust'
module. If you have any questions or want to collaborate/contribute
please message me.


** Resources

  - [[https://brson.github.io/2013/03/10/embedding-rust-in-ruby][Embedding Rust in Ruby]]
  - [[https://github.com/brson/rubyrustdemo][rubyrustdemo]]
  - [[http://doc.rust-lang.org/guide-ffi.html][Rust FFI Guide]]
  - [[http://benchmarksgame.alioth.debian.org/u64q/compare.php?lang=ghc&lang2=rust][Benchmarks]]
  - [[https://pcwalton.github.io/blog/2013/04/18/performance-of-sequential-rust-programs][More Benchmarks]]
  - [[https://github.com/servo/servo][Servo]]
  - [[https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/ffi-chap.html][GHC Manual - Chapter 10. Foreign function interface (FFI)]]
